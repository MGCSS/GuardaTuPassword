/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Session;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Account;
import model.AccountId;

/**
 *
 * @author usuario
 */
public class UserAccounts extends javax.swing.JFrame {

    private Session session;

    /**
     * Creates new form UserAccounts
     */
    public UserAccounts()
    {
        initComponents();
    }

    UserAccounts(Session session) 
    {
        initComponents();
        this.session = session;

        //Poblar la tabla con las cuentas del usuario que ha iniciado sesión.
        this.updateTable();
    }
    
    public Session getSession()
    {
        return this.session;
    }

    public void updateTable() {
        List<Account> accounts;

        accounts = this.session.getUserAccounts();   
        System.out.println(accounts);
        if (accounts != null) {
            
            updateTable(accounts);
        }
    }

    private void updateTable(List<Account> accounts) 
    {
        
        DefaultTableModel model = new DefaultTableModel(
                new Object[][]{},
                new String[]
                {
                    "ID", "Usuario", "Contraseña", "Descripción", "Plataforma"
                }
        )
        {
            /* Solved at: https://stackoverflow.com/questions/12840153/defaulttablemodel-make-cell-not-editable-jtable */
            @Override
            public boolean isCellEditable(int row, int column) 
            {
                switch(column)
                {
                    case 0:
                        return false;
                    default:
                        return true;
                }
            }
            
        };
        
        accounts.forEach((account) -> {
            model.addRow(new Object[]{account.getId().getAccountId(), account.getUser(), account.getPassword(), account.getDescription(), account.getPlatform()});
        });
        
        jtblAccounts.setModel(model);   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnlMainPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblAccounts = new javax.swing.JTable();
        jlblAddAccount = new javax.swing.JLabel();
        jlblDeleteAccount = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmnuUserOptions = new javax.swing.JMenu();
        jmnuItModifyPassword = new javax.swing.JMenuItem();
        jmnuItExitApplication = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Área de usuario");
        setResizable(false);
        setSize(new java.awt.Dimension(499, 372));

        jpnlMainPanel.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setToolTipText("");

        jtblAccounts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Usuario", "Contraseña", "Descripción", "Plataforma"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtblAccounts);

        jScrollPane2.setViewportView(jScrollPane1);

        jlblAddAccount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_add_circle_outline_black_24dp.png"))); // NOI18N
        jlblAddAccount.setToolTipText("Añadir cuenta");
        jlblAddAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlblAddAccountMouseClicked(evt);
            }
        });

        jlblDeleteAccount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_delete_black_24dp.png"))); // NOI18N
        jlblDeleteAccount.setToolTipText("Eliminar cuenta");
        jlblDeleteAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlblDeleteAccountMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jpnlMainPanelLayout = new javax.swing.GroupLayout(jpnlMainPanel);
        jpnlMainPanel.setLayout(jpnlMainPanelLayout);
        jpnlMainPanelLayout.setHorizontalGroup(
            jpnlMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlMainPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpnlMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblAddAccount)
                    .addComponent(jlblDeleteAccount))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jpnlMainPanelLayout.setVerticalGroup(
            jpnlMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlMainPanelLayout.createSequentialGroup()
                .addGroup(jpnlMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlMainPanelLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnlMainPanelLayout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jlblAddAccount)
                        .addGap(32, 32, 32)
                        .addComponent(jlblDeleteAccount)))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setBorder(null);

        jMenu1.setBackground(new java.awt.Color(255, 255, 255));
        jMenu1.setBorder(null);
        jMenu1.setText("                                                                                                                                                                                         ");
        jMenu1.setEnabled(false);
        jMenu1.setFocusable(false);
        jMenuBar1.add(jMenu1);

        jmnuUserOptions.setBackground(new java.awt.Color(255, 255, 255));
        jmnuUserOptions.setBorder(null);
        jmnuUserOptions.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_person_outline_3x.png"))); // NOI18N
        jmnuUserOptions.setToolTipText("Preferencias...");

        jmnuItModifyPassword.setBackground(new java.awt.Color(255, 255, 255));
        jmnuItModifyPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_build_black_24dp.png"))); // NOI18N
        jmnuItModifyPassword.setText("Modificar contraseña");
        jmnuItModifyPassword.setToolTipText("");
        jmnuItModifyPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnuItModifyPasswordActionPerformed(evt);
            }
        });
        jmnuUserOptions.add(jmnuItModifyPassword);

        jmnuItExitApplication.setBackground(new java.awt.Color(255, 255, 255));
        jmnuItExitApplication.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_exit_to_app_black_24dp.png"))); // NOI18N
        jmnuItExitApplication.setText("Salir");
        jmnuItExitApplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnuItExitApplicationActionPerformed(evt);
            }
        });
        jmnuUserOptions.add(jmnuItExitApplication);

        jMenuBar1.add(jmnuUserOptions);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlMainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlMainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmnuItExitApplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnuItExitApplicationActionPerformed
        // TODO add your handling code here:43480693B   test
        
        int rows;
        
        rows = jtblAccounts.getRowCount();
        
        for (int index = 0; index < rows; index++)
        {
            Account account;
            
            account = new Account();
            
            account.setId(new AccountId(Long.valueOf(jtblAccounts.getValueAt(index, 0).toString()), ""));
            account.setUser(jtblAccounts.getValueAt(index, 1).toString());
            account.setPassword(jtblAccounts.getValueAt(index, 2).toString());
            account.setDescription(jtblAccounts.getValueAt(index, 3).toString());
            account.setPlatform(jtblAccounts.getValueAt(index, 4).toString());
            
            this.session.updateAccount_(account);
        }
        
        System.out.println("Goodbye...");
        MainWindow mainWindow;

        mainWindow = new MainWindow();

        mainWindow.setLocationRelativeTo(null);
        mainWindow.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jmnuItExitApplicationActionPerformed

    private void jmnuItModifyPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnuItModifyPasswordActionPerformed
        // TODO add your handling code here
        ChangeAccessPassword changeAccessPassword;

        changeAccessPassword = new ChangeAccessPassword(session);
        changeAccessPassword.setLocationRelativeTo(null);
        changeAccessPassword.setVisible(true);
    }//GEN-LAST:event_jmnuItModifyPasswordActionPerformed

    private void jlblAddAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlblAddAccountMouseClicked
        // TODO add your handling code here:
        // Nueva ventana
        AddAccount addAccount;

        addAccount = new AddAccount(this);
        addAccount.setLocationRelativeTo(null);
        addAccount.setVisible(true);
    }//GEN-LAST:event_jlblAddAccountMouseClicked

    private void jlblDeleteAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlblDeleteAccountMouseClicked
        // TODO add your handling code here:
        int tableRowIndex;
        
        tableRowIndex = jtblAccounts.getSelectedRow();
        
        if(tableRowIndex != -1)
        {
            // Do something
            Account account;
            
            account = new Account(new AccountId(Long.valueOf(jtblAccounts.getValueAt(tableRowIndex, 0).toString()), ""),jtblAccounts.getValueAt(tableRowIndex, 1).toString() ,jtblAccounts.getValueAt(tableRowIndex, 2).toString(), jtblAccounts.getValueAt(tableRowIndex, 3).toString(),jtblAccounts.getValueAt(tableRowIndex, 4).toString());
            
            if (this.session.deleteAccount_(account))
            {
                JOptionPane.showMessageDialog(rootPane, "Cuenta eliminada correctamente.", "Ventana de información", JOptionPane.INFORMATION_MESSAGE);
                updateTable();
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "Ha ocurrido un error. Inténtelo de nuevo", "Error de sistema", JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una cuenta", "Error de usuario", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_jlblDeleteAccountMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jlblAddAccount;
    private javax.swing.JLabel jlblDeleteAccount;
    private javax.swing.JMenuItem jmnuItExitApplication;
    private javax.swing.JMenuItem jmnuItModifyPassword;
    private javax.swing.JMenu jmnuUserOptions;
    private javax.swing.JPanel jpnlMainPanel;
    private javax.swing.JTable jtblAccounts;
    // End of variables declaration//GEN-END:variables
}
